// add dependencies to the lifecycle tasks
tasks.named("setUp") {
	dependsOn ":composeUp"
}

tasks.named("tearDown") {
	dependsOn ":composeDown"
}

// before we start compose-up build the necessary images
composeUp {
	dependsOn ":buildDockerImage"
	dependsOn ":client-extensions:liferay-sample-etc-node:buildDockerImage"
	dependsOn ":client-extensions:liferay-sample-etc-spring-boot:buildDockerImage"
}

// register our compose file with dockerCompose plugin
dockerCompose {
	useComposeFiles = ['docker-compose.yaml']
}

// for printing out markers in ascii cast files
tasks.named("composeUp") {
	doLast {
		println "composeUp finished"
	}
}

tasks.named("buildDockerImage") {
	doLast {
		println "buildDockerImage finished"
	}
}
project(':client-extensions:liferay-sample-etc-node').afterEvaluate {
  tasks.named("buildDockerImage") {
    doLast {
      println ":client-extensions:liferay-sample-etc-node:buildDockerImage finished"
    }
  }
}
project(':client-extensions:liferay-sample-etc-spring-boot').afterEvaluate {
  tasks.named("buildDockerImage") {
    doLast {
      println ":client-extensions:liferay-sample-etc-spring-boot:buildDockerImage finished"
    }
  }
}
